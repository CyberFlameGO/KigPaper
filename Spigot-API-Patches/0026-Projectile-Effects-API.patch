From 92d48e9b6ecaca3ea26f7c841b30d2c2a41ddaa5 Mon Sep 17 00:00:00 2001
From: RoccoDev <roccodev.business@gmail.com>
Date: Mon, 21 Sep 2020 11:54:46 +0200
Subject: [PATCH] Projectile Effects API


diff --git a/src/main/java/dev/rocco/kig/paper/api/particle/ParticleProjectileEffect.java b/src/main/java/dev/rocco/kig/paper/api/particle/ParticleProjectileEffect.java
new file mode 100644
index 00000000..df49de62
--- /dev/null
+++ b/src/main/java/dev/rocco/kig/paper/api/particle/ParticleProjectileEffect.java
@@ -0,0 +1,83 @@
+package dev.rocco.kig.paper.api.particle;
+
+import org.bukkit.Effect;
+import org.bukkit.Location;
+
+public class ParticleProjectileEffect extends ProjectileEffect {
+    private Effect effect;
+    private int id, data, count, radius = 32;
+    private float offsetX, offsetY, offsetZ, speed;
+
+    @Override
+    public void spawn(Location loc) {
+        loc.getWorld().spigot().playEffect(loc, effect, id, data, offsetX, offsetY, offsetZ, speed, count, radius);
+    }
+
+    private ParticleProjectileEffect() {
+        super(2);
+    }
+
+    public static class Builder {
+        private Effect effect;
+        private int id, data, count, radius = 32;
+        private float offsetX, offsetY, offsetZ, speed;
+
+        public Builder(Effect effect) {
+            this.effect = effect;
+        }
+
+        public Builder setId(int id) {
+            this.id = id;
+            return this;
+        }
+
+        public Builder setData(int data) {
+            this.data = data;
+            return this;
+        }
+
+        public Builder setCount(int count) {
+            this.count = count;
+            return this;
+        }
+
+        public Builder setRadius(int radius) {
+            this.radius = radius;
+            return this;
+        }
+
+        public Builder setOffsetX(float offsetX) {
+            this.offsetX = offsetX;
+            return this;
+        }
+
+        public Builder setOffsetY(float offsetY) {
+            this.offsetY = offsetY;
+            return this;
+        }
+
+        public Builder setOffsetZ(float offsetZ) {
+            this.offsetZ = offsetZ;
+            return this;
+        }
+
+        public Builder setSpeed(float speed) {
+            this.speed = speed;
+            return this;
+        }
+
+        public ParticleProjectileEffect build() {
+            ParticleProjectileEffect result = new ParticleProjectileEffect();
+            result.effect = effect;
+            result.id = id;
+            result.radius = radius;
+            result.count = count;
+            result.speed = speed;
+            result.offsetX = offsetX;
+            result.offsetY = offsetY;
+            result.offsetZ = offsetZ;
+            result.data = data;
+            return result;
+        }
+    }
+}
diff --git a/src/main/java/dev/rocco/kig/paper/api/particle/ProjectileEffect.java b/src/main/java/dev/rocco/kig/paper/api/particle/ProjectileEffect.java
new file mode 100644
index 00000000..e96e5fcf
--- /dev/null
+++ b/src/main/java/dev/rocco/kig/paper/api/particle/ProjectileEffect.java
@@ -0,0 +1,17 @@
+package dev.rocco.kig.paper.api.particle;
+
+import org.bukkit.Location;
+
+public abstract class ProjectileEffect {
+    private int loopTimes;
+
+    public ProjectileEffect(int loopTimes) {
+        this.loopTimes = loopTimes;
+    }
+
+    public int getLoopTimes() {
+        return loopTimes;
+    }
+
+    public abstract void spawn(Location loc);
+}
diff --git a/src/main/java/org/bukkit/entity/Projectile.java b/src/main/java/org/bukkit/entity/Projectile.java
index febe5f4d..0575af0b 100644
--- a/src/main/java/org/bukkit/entity/Projectile.java
+++ b/src/main/java/org/bukkit/entity/Projectile.java
@@ -1,5 +1,6 @@
 package org.bukkit.entity;
 
+import dev.rocco.kig.paper.api.particle.ProjectileEffect;
 import org.bukkit.Effect;
 import org.bukkit.projectiles.ProjectileSource;
 
@@ -64,10 +65,10 @@ public interface Projectile extends Entity {
      * This effect will be shown every time the position is updated.
      * @param trailEffect the effect or {@code null} if no effect should be displayed.
      */
-    void setTrailEffect(Effect trailEffect);
+    void setTrailEffect(ProjectileEffect trailEffect);
 
     /**
      * @return the projectile's trail effect, or {@code null} if no effect is displayed.
      */
-    Effect getTrailEffect();
+    ProjectileEffect getTrailEffect();
 }
-- 
2.26.2

