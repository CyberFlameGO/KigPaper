From 948f4d085ab29ee2c70f7421beb09f685a08984f Mon Sep 17 00:00:00 2001
From: Archer <archer@beezig.eu>
Date: Tue, 17 Aug 2021 23:31:46 +0200
Subject: [PATCH] javadoc: Fix syntax and outdated refs

This commit fixes some Javadoc problems that prevented compiling the API
docs. Note, however, that there are still loads of outdated references
in this project's Javadoc. This commit is only trying to fix errors that
prevented Javadoc from successfully outputting a compiled API doc, but
the doc comments are still outdated.

diff --git a/src/main/java/co/aikar/timings/Timings.java b/src/main/java/co/aikar/timings/Timings.java
index 0f7be036..eb20fc20 100644
--- a/src/main/java/co/aikar/timings/Timings.java
+++ b/src/main/java/co/aikar/timings/Timings.java
@@ -143,7 +143,7 @@ public final class Timings {
 
     /**
      * Sets whether or not the Timings should monitor at Verbose level.
-     * <p/>
+     * <p>
      * When Verbose is disabled, high-frequency timings will not be available.
      * Calling this will reset timing data.
      *
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 26638042..f9ae0e13 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -1340,7 +1340,7 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
         }
 
         /**
-         * Gets all players hidden with {@link hidePlayer(org.bukkit.entity.Player)}.
+         * Gets all players hidden with {@code hidePlayer(org.bukkit.entity.Player)}.
          *
          * @return a Set with all hidden players
          */
diff --git a/src/main/java/org/bukkit/entity/TNTPrimed.java b/src/main/java/org/bukkit/entity/TNTPrimed.java
index 7b1b6b6d..0273c30a 100644
--- a/src/main/java/org/bukkit/entity/TNTPrimed.java
+++ b/src/main/java/org/bukkit/entity/TNTPrimed.java
@@ -1,5 +1,7 @@
 package org.bukkit.entity;
 
+import org.bukkit.Location;
+
 /**
  * Represents a Primed TNT.
  */
diff --git a/src/main/java/org/bukkit/event/Event.java b/src/main/java/org/bukkit/event/Event.java
index 6677e1bd..02be04d0 100644
--- a/src/main/java/org/bukkit/event/Event.java
+++ b/src/main/java/org/bukkit/event/Event.java
@@ -1,5 +1,6 @@
 package org.bukkit.event;
 
+import org.bukkit.plugin.Plugin;
 import org.bukkit.plugin.PluginManager;
 
 /**
@@ -8,7 +9,7 @@ import org.bukkit.plugin.PluginManager;
  * All events require a static method named getHandlerList() which returns the same {@link HandlerList} as {@link #getHandlers()}.
  *
  * @see PluginManager#callEvent(Event)
- * @see PluginManager#registerEvents(Listener,Plugin)
+ * @see PluginManager#registerEvents(Listener, Plugin)
  */
 public abstract class Event {
     private String name;
diff --git a/src/main/java/org/bukkit/event/inventory/InventoryInteractEvent.java b/src/main/java/org/bukkit/event/inventory/InventoryInteractEvent.java
index 8624f8d7..ccba2570 100644
--- a/src/main/java/org/bukkit/event/inventory/InventoryInteractEvent.java
+++ b/src/main/java/org/bukkit/event/inventory/InventoryInteractEvent.java
@@ -63,8 +63,8 @@ public abstract class InventoryInteractEvent extends InventoryEvent implements C
     }
 
     /**
-     * Proxy method to {@link #setResult(Event.Result)} for the Cancellable
-     * interface. {@link #setResult(Event.Result)} is preferred, as it allows
+     * Proxy method to {@link #setResult(Result)} for the Cancellable
+     * interface. {@link #setResult(Result)} is preferred, as it allows
      * you to specify the Result beyond Result.DENY and Result.ALLOW.
      * <p>
      * {@inheritDoc}
diff --git a/src/main/java/org/bukkit/material/Door.java b/src/main/java/org/bukkit/material/Door.java
index e02d8e66..94484088 100644
--- a/src/main/java/org/bukkit/material/Door.java
+++ b/src/main/java/org/bukkit/material/Door.java
@@ -11,13 +11,13 @@ import org.bukkit.block.BlockFace;
  * work with modern doors. Some methods are undefined dependant on <code>isTopHalf()</code>
  * due to Minecraft's internal representation of doors.
  *
- * @see Material.WOODEN_DOOR
- * @see Material.IRON_DOOR_BLOCK
- * @see Material.SPRUCE_DOOR
- * @see Material.BIRCH_DOOR
- * @see Material.JUNGLE_DOOR
- * @see Material.ACACIA_DOOR
- * @see Material.DARK_OAK_DOOR
+ * @see Material#WOODEN_DOOR
+ * @see Material#IRON_DOOR_BLOCK
+ * @see Material#SPRUCE_DOOR
+ * @see Material#BIRCH_DOOR
+ * @see Material#JUNGLE_DOOR
+ * @see Material#ACACIA_DOOR
+ * @see Material#DARK_OAK_DOOR
  */
 public class Door extends MaterialData implements Directional, Openable {
 
@@ -51,18 +51,18 @@ public class Door extends MaterialData implements Directional, Openable {
      * @param type The type of material this door is made of. This must match the type of the block above.
      * @param face The direction the door is facing.
      *
-     * @see Material.WOODEN_DOOR
-     * @see Material.IRON_DOOR_BLOCK
-     * @see Material.SPRUCE_DOOR
-     * @see Material.BIRCH_DOOR
-     * @see Material.JUNGLE_DOOR
-     * @see Material.ACACIA_DOOR
-     * @see Material.DARK_OAK_DOOR
+     * @see Material#WOODEN_DOOR
+     * @see Material#IRON_DOOR_BLOCK
+     * @see Material#SPRUCE_DOOR
+     * @see Material#BIRCH_DOOR
+     * @see Material#JUNGLE_DOOR
+     * @see Material#ACACIA_DOOR
+     * @see Material#DARK_OAK_DOOR
      *
-     * @see BlockFace.WEST
-     * @see BlockFace.NORTH
-     * @see BlockFace.EAST
-     * @see BlockFace.SOUTH
+     * @see BlockFace#WEST
+     * @see BlockFace#NORTH
+     * @see BlockFace#EAST
+     * @see BlockFace#SOUTH
      */
     public Door(final Material type, BlockFace face) {
         this(type, face, false);
@@ -76,18 +76,18 @@ public class Door extends MaterialData implements Directional, Openable {
      * @param face The direction the door is facing.
      * @param isOpen Whether the door is currently opened.
      *
-     * @see Material.WOODEN_DOOR
-     * @see Material.IRON_DOOR_BLOCK
-     * @see Material.SPRUCE_DOOR
-     * @see Material.BIRCH_DOOR
-     * @see Material.JUNGLE_DOOR
-     * @see Material.ACACIA_DOOR
-     * @see Material.DARK_OAK_DOOR
+     * @see Material#WOODEN_DOOR
+     * @see Material#IRON_DOOR_BLOCK
+     * @see Material#SPRUCE_DOOR
+     * @see Material#BIRCH_DOOR
+     * @see Material#JUNGLE_DOOR
+     * @see Material#ACACIA_DOOR
+     * @see Material#DARK_OAK_DOOR
      *
-     * @see BlockFace.WEST
-     * @see BlockFace.NORTH
-     * @see BlockFace.EAST
-     * @see BlockFace.SOUTH
+     * @see BlockFace#WEST
+     * @see BlockFace#NORTH
+     * @see BlockFace#EAST
+     * @see BlockFace#SOUTH
      */
     public Door(final Material type, BlockFace face, boolean isOpen) {
         super(type);
@@ -102,13 +102,13 @@ public class Door extends MaterialData implements Directional, Openable {
      * @param type The type of material this door is made of. This must match the type of the block below.
      * @param isHingeRight True if the hinge is on the right hand side, false if the hinge is on the left hand side.
      *
-     * @see Material.WOODEN_DOOR
-     * @see Material.IRON_DOOR_BLOCK
-     * @see Material.SPRUCE_DOOR
-     * @see Material.BIRCH_DOOR
-     * @see Material.JUNGLE_DOOR
-     * @see Material.ACACIA_DOOR
-     * @see Material.DARK_OAK_DOOR
+     * @see Material#WOODEN_DOOR
+     * @see Material#IRON_DOOR_BLOCK
+     * @see Material#SPRUCE_DOOR
+     * @see Material#BIRCH_DOOR
+     * @see Material#JUNGLE_DOOR
+     * @see Material#ACACIA_DOOR
+     * @see Material#DARK_OAK_DOOR
      */
     public Door(final Material type, boolean isHingeRight) {
         super(type);
@@ -125,10 +125,10 @@ public class Door extends MaterialData implements Directional, Openable {
      *
      * @see TreeSpecies
      *
-     * @see BlockFace.WEST
-     * @see BlockFace.NORTH
-     * @see BlockFace.EAST
-     * @see BlockFace.SOUTH
+     * @see BlockFace#WEST
+     * @see BlockFace#NORTH
+     * @see BlockFace#EAST
+     * @see BlockFace#SOUTH
      */
     public Door(final TreeSpecies species, BlockFace face) {
         this(getWoodDoorOfSpecies(species), face, false);
@@ -144,10 +144,10 @@ public class Door extends MaterialData implements Directional, Openable {
      *
      * @see TreeSpecies
      *
-     * @see BlockFace.WEST
-     * @see BlockFace.NORTH
-     * @see BlockFace.EAST
-     * @see BlockFace.SOUTH
+     * @see BlockFace#WEST
+     * @see BlockFace#NORTH
+     * @see BlockFace#EAST
+     * @see BlockFace#SOUTH
      */
     public Door(final TreeSpecies species, BlockFace face, boolean isOpen) {
         this(getWoodDoorOfSpecies(species), face, isOpen);
@@ -191,12 +191,12 @@ public class Door extends MaterialData implements Directional, Openable {
      * @param species The species of wood door required.
      * @return The item type for the given species.
      *
-     * @see Material.WOODEN_DOOR
-     * @see Material.SPRUCE_DOOR
-     * @see Material.BIRCH_DOOR
-     * @see Material.JUNGLE_DOOR
-     * @see Material.ACACIA_DOOR
-     * @see Material.DARK_OAK_DOOR
+     * @see Material#WOODEN_DOOR
+     * @see Material#SPRUCE_DOOR
+     * @see Material#BIRCH_DOOR
+     * @see Material#JUNGLE_DOOR
+     * @see Material#ACACIA_DOOR
+     * @see Material#DARK_OAK_DOOR
      */
     public static Material getWoodDoorOfSpecies(TreeSpecies species) {
         switch (species) {
@@ -247,7 +247,7 @@ public class Door extends MaterialData implements Directional, Openable {
     }
 
     /**
-     * @return BlockFace.SELF
+     * @return BlockFace#SELF
      * @deprecated This method should not be used; use hinge and facing accessors instead.
      */
     @Deprecated
diff --git a/src/main/java/org/bukkit/plugin/PluginAwareness.java b/src/main/java/org/bukkit/plugin/PluginAwareness.java
index ddb47b7e..dd0f7d6f 100644
--- a/src/main/java/org/bukkit/plugin/PluginAwareness.java
+++ b/src/main/java/org/bukkit/plugin/PluginAwareness.java
@@ -20,8 +20,8 @@ public interface PluginAwareness {
         /**
          * This specifies that all (text) resources stored in a plugin's jar
          * use UTF-8 encoding.
-         *
-         * @see JavaPlugin#getTextResource(String)
+         * <p>
+         * See {@code JavaPlugin#getTextResource(String)}
          */
         UTF8,
         ;
diff --git a/src/main/java/org/bukkit/plugin/PluginDescriptionFile.java b/src/main/java/org/bukkit/plugin/PluginDescriptionFile.java
index c82928ef..7676b3c9 100644
--- a/src/main/java/org/bukkit/plugin/PluginDescriptionFile.java
+++ b/src/main/java/org/bukkit/plugin/PluginDescriptionFile.java
@@ -9,8 +9,7 @@ import java.util.List;
 import java.util.Map;
 import java.util.Set;
 
-import org.bukkit.command.CommandExecutor;
-import org.bukkit.command.PluginCommand;
+import org.bukkit.command.*;
 import org.bukkit.plugin.java.JavaPlugin;
 import org.bukkit.permissions.Permissible;
 import org.bukkit.permissions.Permission;
@@ -601,7 +600,7 @@ public final class PluginDescriptionFile {
      *         standard one if no specific message is defined. Without the
      *         permission node, no {@link
      *         PluginCommand#setExecutor(CommandExecutor) CommandExecutor} or
-     *         {@link PluginCommand#setTabCompleter(TabCompleter)
+     *         {@link PluginCommand#setTabCompleter(TabCompleter)}
      *         TabCompleter} will be called.</td>
      *     <td><blockquote><pre>permission: inferno.flagrate</pre></blockquote></td>
      * </tr><tr>
@@ -624,7 +623,7 @@ public final class PluginDescriptionFile {
      *     <td>String</td>
      *     <td>This message is displayed to a player when the {@link
      *         PluginCommand#setExecutor(CommandExecutor)} {@linkplain
-     *         CommandExecutor#onCommand(CommandSender,Command,String,String[])
+     *         CommandExecutor#onCommand(CommandSender, Command, String, String[])}
      *         returns false}. &lt;command&gt; is a macro that is replaced
      *         the command issued.</td>
      *     <td><blockquote><pre>usage: Syntax error! Perhaps you meant /&lt;command&gt; PlayerName?</pre></blockquote>
-- 
2.32.0

