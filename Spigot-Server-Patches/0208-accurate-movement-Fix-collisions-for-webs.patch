From 3b272d896e608b0395f144a07c6340f681e58089 Mon Sep 17 00:00:00 2001
From: Archer <archer@beezig.eu>
Date: Mon, 13 Sep 2021 20:39:59 +0200
Subject: [PATCH] accurate-movement: Fix collisions for webs

Fixed a bug that'd cancel falldamage when landing on a solid block's
edge while your hitbox is partially above a cobweb block.

diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 0c2b7d5bb..941d79d11 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -1,13 +1,11 @@
 package net.minecraft.server;
 
-import java.util.Iterator;
-import java.util.List;
-import java.util.Random;
-import java.util.UUID;
+import java.util.*;
 import java.util.concurrent.Callable;
 
 // CraftBukkit start
 import dev.rocco.kig.paper.impl.util.SimpleMetadataStore;
+import org.apache.commons.lang3.tuple.Pair;
 import org.bukkit.Bukkit;
 import org.bukkit.Location;
 import org.bukkit.Server;
@@ -849,19 +847,32 @@ public abstract class Entity implements ICommandListener {
     }
 
     protected void checkBlockCollisions() {
+        // KigPaper - Start
         double motYAccount = PaperSpigotConfig.accurateBlockCollisions ? this.motY : 0.0D; // KigPaper - account for falling speed
+        boolean shouldCollideWithWeb = true, didCollide = false;
+        Stack<Pair<IBlockData, BlockPosition>> websQueue = new Stack<>();
+        // KigPaper - End
         BlockPosition blockposition = new BlockPosition(this.getBoundingBox().a + 0.001D, this.getBoundingBox().b + 0.001D + motYAccount, this.getBoundingBox().c + 0.001D);
         BlockPosition blockposition1 = new BlockPosition(this.getBoundingBox().d - 0.001D, this.getBoundingBox().e - 0.001D, this.getBoundingBox().f - 0.001D);
 
         if (this.world.areChunksLoadedBetween(blockposition, blockposition1)) {
-            for (int i = blockposition.getX(); i <= blockposition1.getX(); ++i) {
-                for (int j = blockposition.getY(); j <= blockposition1.getY(); ++j) {
+            // KigPaper - Start
+            for (int i = blockposition1.getY(); i >= blockposition.getY(); --i) {
+                for (int j = blockposition.getX(); j <= blockposition1.getX(); ++j) {
                     for (int k = blockposition.getZ(); k <= blockposition1.getZ(); ++k) {
-                        BlockPosition blockposition2 = new BlockPosition(i, j, k);
+                        // KigPaper - End
+                        BlockPosition blockposition2 = new BlockPosition(j, i, k);
                         IBlockData iblockdata = this.world.getType(blockposition2);
 
                         try {
-                            iblockdata.getBlock().a(this.world, blockposition2, iblockdata, this);
+                            // KigPaper - Start
+                            if (shouldCollideWithWeb && iblockdata.getBlock().getMaterial() == Material.WEB) {
+                                websQueue.push(Pair.of(iblockdata, blockposition2));
+                            } else {
+                                iblockdata.getBlock().a(this.world, blockposition2, iblockdata, this);
+                                if (iblockdata.getBlock().getMaterial().isSolid()) didCollide = true;
+                            }
+                            // KigPaper - End
                         } catch (Throwable throwable) {
                             CrashReport crashreport = CrashReport.a(throwable, "Colliding entity with block");
                             CrashReportSystemDetails crashreportsystemdetails = crashreport.a("Block being collided with");
@@ -871,6 +882,14 @@ public abstract class Entity implements ICommandListener {
                         }
                     }
                 }
+                // KigPaper - Start
+                if (didCollide) shouldCollideWithWeb = false;
+                if (shouldCollideWithWeb && !websQueue.isEmpty()) {
+                    for (Pair<IBlockData, BlockPosition> p : websQueue) {
+                        p.getLeft().getBlock().a(this.world, p.getRight(), p.getLeft(), this);
+                    }
+                }
+                // KigPaper - End
             }
         }
 
-- 
2.33.0

