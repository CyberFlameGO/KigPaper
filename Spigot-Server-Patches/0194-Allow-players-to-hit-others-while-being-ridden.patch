From a27a657cc908e601d0925a9ea8fe24d015a967f0 Mon Sep 17 00:00:00 2001
From: RoccoDev <roccodev.business@gmail.com>
Date: Mon, 19 Jul 2021 13:32:12 +0200
Subject: [PATCH] Allow players to hit others while being ridden


diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 99315de8a..5dd12c41a 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -1335,22 +1335,43 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
 
         this.player.resetIdleTimer();
         if (entity != null) {
-            // KigPaper start - allow hitting the vehicle when hitboxes collide
-            if(PaperSpigotConfig.betterVehicleHitboxes && entity instanceof EntityPlayer && entity.vehicle != null && !((EntityPlayer) entity).collidesWithEntities) {
-                // Ray trace to see if the player should hit the vehicle instead
-                double maxDist = 3.0;
-                Vec3D look = player.ap();
-                Vec3D eyePos = new Vec3D(player.locX, player.locY + player.getBukkitEntity().getEyeHeight(), player.locZ);
-                Vec3D maxDistLook = eyePos.add(look.a * maxDist, look.b * maxDist, look.c * maxDist);
-                Entity vehicle = entity.vehicle;
-                List<Entity> collisions = worldserver.a(player, player.getBoundingBox()
-                        .a(look.a * maxDist, look.b * maxDist, look.c * maxDist) // add coords
-                        .grow(1D, 1D, 1D), e -> e == vehicle); // Only check for the vehicle
-                for(Entity match : collisions) {
-                    AxisAlignedBB expandedHitbox = match.getBoundingBox().grow(0.1D, 0.1D, 0.1D); // Hit box is collision box + 0.1
-                    if(expandedHitbox.a(eyePos) || expandedHitbox.a(eyePos, maxDistLook) != null) {
-                        entity = match;
-                        break;
+            // KigPaper start - allow hitting the vehicle when hitboxes collide / allow the player to hit others if they are being ridden by something
+            if(PaperSpigotConfig.betterVehicleHitboxes) {
+                if (entity instanceof EntityPlayer && entity.vehicle != null && !((EntityPlayer) entity).collidesWithEntities) {
+                    // Allow hitting the vehicle when hitboxes collide
+                    // Ray trace to see if the player should hit the vehicle instead
+                    double maxDist = 3.0;
+                    Vec3D look = player.ap();
+                    Vec3D eyePos = new Vec3D(player.locX, player.locY + player.getBukkitEntity().getEyeHeight(), player.locZ);
+                    Vec3D maxDistLook = eyePos.add(look.a * maxDist, look.b * maxDist, look.c * maxDist);
+                    Entity vehicle = entity.vehicle;
+                    List<Entity> collisions = worldserver.a(player, player.getBoundingBox()
+                            .a(look.a * maxDist, look.b * maxDist, look.c * maxDist) // add coords
+                            .grow(1D, 1D, 1D), e -> e == vehicle); // Only check for the vehicle
+                    for (Entity match : collisions) {
+                        AxisAlignedBB expandedHitbox = match.getBoundingBox().grow(0.1D, 0.1D, 0.1D); // Hit box is collision box + 0.1
+                        if (expandedHitbox.a(eyePos) || expandedHitbox.a(eyePos, maxDistLook) != null) {
+                            entity = match;
+                            break;
+                        }
+                    }
+                } else if (entity == player.passenger) { // player hit passenger
+                    // Allow the player to hit others if they are being ridden by something
+                    // Ray trace to see if the player should hit someone else instead
+                    double maxDist = 3.0;
+                    Vec3D look = player.ap();
+                    Vec3D eyePos = new Vec3D(player.locX, player.locY + player.getBukkitEntity().getEyeHeight(), player.locZ);
+                    Vec3D maxDistLook = eyePos.add(look.a * maxDist, look.b * maxDist, look.c * maxDist);
+                    Entity passenger = entity.passenger;
+                    List<Entity> collisions = worldserver.a(player, player.getBoundingBox()
+                            .a(look.a * maxDist, look.b * maxDist, look.c * maxDist) // add coords
+                            .grow(1D, 1D, 1D), e -> e != passenger); // Don't include passenger
+                    for (Entity match : collisions) {
+                        AxisAlignedBB expandedHitbox = match.getBoundingBox().grow(0.1D, 0.1D, 0.1D); // Hit box is collision box + 0.1
+                        if (expandedHitbox.a(eyePos) || expandedHitbox.a(eyePos, maxDistLook) != null) {
+                            entity = match;
+                            break;
+                        }
                     }
                 }
             }
-- 
2.26.2

