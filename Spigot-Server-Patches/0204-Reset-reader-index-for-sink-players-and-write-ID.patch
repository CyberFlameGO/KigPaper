From f4a0a0c41e8bc56b59453cbbb6adac71e0a5abc5 Mon Sep 17 00:00:00 2001
From: RoccoDev <hey@rocco.dev>
Date: Tue, 31 Aug 2021 02:13:10 +0200
Subject: [PATCH] Reset reader index for sink players and write ID


diff --git a/src/main/java/dev/rocco/kig/paper/impl/cheetah/SinkPlayerConnection.java b/src/main/java/dev/rocco/kig/paper/impl/cheetah/SinkPlayerConnection.java
index f8992b9c7..a84632760 100644
--- a/src/main/java/dev/rocco/kig/paper/impl/cheetah/SinkPlayerConnection.java
+++ b/src/main/java/dev/rocco/kig/paper/impl/cheetah/SinkPlayerConnection.java
@@ -16,11 +16,15 @@ public class SinkPlayerConnection extends PlayerConnection {
     public void sendPacket(Packet packet) {
         // Don't send packet to non existing connection, instead serialize it in place and invoke the callback.
         ByteBuf direct = Unpooled.directBuffer(), withLength = null;
+        Integer id = EnumProtocol.PLAY.a(EnumProtocolDirection.CLIENTBOUND, packet);
+        if (id == null) return;
         try {
             PacketDataSerializer serializer = new PacketDataSerializer(direct);
+            serializer.b(id); // write packet ID
             packet.b(serializer);
             // Prepend packet length
             withLength = Unpooled.directBuffer();
+            withLength.markReaderIndex();
             int packetSize = direct.readableBytes();
             int packetSizeVarInt = PacketDataSerializer.a(packetSize);
             if (packetSizeVarInt > 3) {
@@ -31,6 +35,7 @@ public class SinkPlayerConnection extends PlayerConnection {
                 newSerializer.b(packetSize);
                 newSerializer.writeBytes(direct, direct.readerIndex(), packetSize);
             }
+            withLength.resetReaderIndex();
             ((SinkEntityPlayer) player).getPacketConsumer().accept(withLength.nioBuffer());
         } catch (Exception ex) {
             MinecraftServer.LOGGER.error("Error sending packet to sink entity", ex);
-- 
2.31.1

