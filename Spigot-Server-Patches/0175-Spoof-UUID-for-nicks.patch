From 54bdb8a17249e83b052064080dc5f42488c66ed1 Mon Sep 17 00:00:00 2001
From: RoccoDev <hey@rocco.dev>
Date: Mon, 10 May 2021 21:19:40 +0200
Subject: [PATCH] Spoof UUID for nicks


diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index 190a8615d..58e0d1a95 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -1,15 +1,13 @@
 package net.minecraft.server;
 
+import com.google.common.base.Charsets;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
 import com.mojang.authlib.GameProfile;
 import io.netty.buffer.Unpooled;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collection;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.List;
+
+import java.util.*;
+
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
@@ -66,10 +64,14 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
     public boolean collidesWithEntities = true;
     public int viewDistance; // PaperSpigot - Player view distance API
     private int containerUpdateDelay; // PaperSpigot
-    private String nickname; // KigPaper
+
+    // KigPaper start
+    private String nickname;
+    private UUID nickSpoofedUUID;
 
     public void setNickname(String nickname) {
         this.nickname = nickname;
+        this.nickSpoofedUUID = nickname == null ? null : UUID.nameUUIDFromBytes(("KIGNick:" + nickname).getBytes(Charsets.UTF_8));
     }
 
     public boolean isNicknamed() {
@@ -80,6 +82,11 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         return nickname;
     }
 
+    public UUID getNickSpoofedUUID() {
+        return nickSpoofedUUID;
+    }
+    // KigPaper end
+
     @Override
     public boolean ad()
     {
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutNamedEntitySpawn.java b/src/main/java/net/minecraft/server/PacketPlayOutNamedEntitySpawn.java
new file mode 100644
index 000000000..453cc5ca6
--- /dev/null
+++ b/src/main/java/net/minecraft/server/PacketPlayOutNamedEntitySpawn.java
@@ -0,0 +1,68 @@
+package net.minecraft.server;
+
+import java.io.IOException;
+import java.util.List;
+import java.util.UUID;
+import net.minecraft.server.DataWatcher.WatchableObject;
+
+public class PacketPlayOutNamedEntitySpawn implements Packet<PacketListenerPlayOut> {
+    private int a;
+    private UUID b;
+    private int c;
+    private int d;
+    private int e;
+    private byte f;
+    private byte g;
+    private int h;
+    private DataWatcher i;
+    private List<WatchableObject> j;
+
+    public PacketPlayOutNamedEntitySpawn() {
+    }
+
+    public PacketPlayOutNamedEntitySpawn(EntityHuman var1) {
+        this.a = var1.getId();
+        // KigPaper start
+        if (var1 instanceof EntityPlayer) {
+            UUID spoofedUUID = ((EntityPlayer) var1).getNickSpoofedUUID();
+            this.b = spoofedUUID == null ? var1.getProfile().getId() : spoofedUUID;
+        } else this.b = var1.getProfile().getId();
+        // KigPaper end
+        this.c = MathHelper.floor(var1.locX * 32.0D);
+        this.d = MathHelper.floor(var1.locY * 32.0D);
+        this.e = MathHelper.floor(var1.locZ * 32.0D);
+        this.f = (byte)((int)(var1.yaw * 256.0F / 360.0F));
+        this.g = (byte)((int)(var1.pitch * 256.0F / 360.0F));
+        ItemStack var2 = var1.inventory.getItemInHand();
+        this.h = var2 == null ? 0 : Item.getId(var2.getItem());
+        this.i = var1.getDataWatcher();
+    }
+
+    public void a(PacketDataSerializer var1) throws IOException {
+        this.a = var1.e();
+        this.b = var1.g();
+        this.c = var1.readInt();
+        this.d = var1.readInt();
+        this.e = var1.readInt();
+        this.f = var1.readByte();
+        this.g = var1.readByte();
+        this.h = var1.readShort();
+        this.j = DataWatcher.b(var1);
+    }
+
+    public void b(PacketDataSerializer var1) throws IOException {
+        var1.b(this.a);
+        var1.a(this.b);
+        var1.writeInt(this.c);
+        var1.writeInt(this.d);
+        var1.writeInt(this.e);
+        var1.writeByte(this.f);
+        var1.writeByte(this.g);
+        var1.writeShort(this.h);
+        this.i.a(var1);
+    }
+
+    public void a(PacketListenerPlayOut var1) {
+        var1.a(this);
+    }
+}
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java b/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
index 2efbce727..9c6583ac4 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
@@ -31,7 +31,7 @@ public class PacketPlayOutPlayerInfo implements Packet<PacketListenerPlayOut> {
                 PropertyMap properties = profile.getProperties();
                 // Custom property is here to use the textures from the proxy if provided
                 Collection<Property> fakeTextures = properties.get("kig-textures");
-                profile = new GameProfile(profile.getId(), entityplayer.getNickname());
+                profile = new GameProfile(entityplayer.getNickSpoofedUUID(), entityplayer.getNickname());
                 if (fakeTextures == null || fakeTextures.isEmpty()) {
                     GameProfile textures = TileEntitySkull.skinCache.getIfPresent(entityplayer.getNickname().toLowerCase());
                     if (textures != null) profile.getProperties().putAll(textures.getProperties());
@@ -49,12 +49,14 @@ public class PacketPlayOutPlayerInfo implements Packet<PacketListenerPlayOut> {
     // Only used to update ping
     public PacketPlayOutPlayerInfo(EnumPlayerInfoAction packetplayoutplayerinfo_enumplayerinfoaction, Iterable<EntityPlayer> iterable) {
         this.a = packetplayoutplayerinfo_enumplayerinfoaction;
-        Iterator iterator = iterable.iterator();
-
-        while (iterator.hasNext()) {
-            EntityPlayer entityplayer = (EntityPlayer) iterator.next();
-
-            this.b.add(new PlayerInfoData(entityplayer.getProfile(), entityplayer.ping, entityplayer.playerInteractManager.getGameMode(), entityplayer.getPlayerListName()));
+        for (EntityPlayer entityplayer : iterable) {
+            GameProfile profile = entityplayer.getProfile();
+            // KigPaper start
+            if (entityplayer.isNicknamed()) {
+                profile = new GameProfile(entityplayer.getNickSpoofedUUID(), entityplayer.getNickname());
+            }
+            // KigPaper end
+            this.b.add(new PlayerInfoData(profile, entityplayer.ping, entityplayer.playerInteractManager.getGameMode(), entityplayer.getPlayerListName()));
         }
 
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index d83207cb0..16bdeea84 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -317,6 +317,12 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         packet.components = message;
         getHandle().playerConnection.sendPacket(packet);
     }
+
+    @Override
+    public UUID getUniqueIdForDisplay() {
+        UUID spoofed = getHandle().getNickSpoofedUUID();
+        return spoofed == null ? getUniqueId() : spoofed;
+    }
     // KigPaper end
 
     @Override
-- 
2.28.0

