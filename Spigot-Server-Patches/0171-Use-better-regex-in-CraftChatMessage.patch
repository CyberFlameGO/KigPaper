From 7f58b98245473fa643739b8ea567ce3f17bfed29 Mon Sep 17 00:00:00 2001
From: RoccoDev <hey@rocco.dev>
Date: Mon, 26 Apr 2021 12:43:54 +0200
Subject: [PATCH] Use better regex in CraftChatMessage


diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java
index a066b3245..ef5f3da24 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java
@@ -80,8 +80,8 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
 
         if (tag.hasKey(BOOK_PAGES.NBT) && handlePages) {
             NBTTagList pages = tag.getList(BOOK_PAGES.NBT, 8);
-
-            for (int i = 0; i < Math.min(MAX_PAGES, pages.size()); i++) { // KigPaper - limit pages
+            if (pages.size() > MAX_PAGES) return; // KigPaper - limit pages
+            for (int i = 0; i < pages.size(); i++) {
                 String page = pages.getString(i);
                 if (resolved) {
                     try {
@@ -236,7 +236,8 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
             if (page == null) {
                 page = "";
             } else if (page.length() > MAX_PAGE_LENGTH) {
-                page = page.substring(0, MAX_PAGE_LENGTH);
+                //page = page.substring(0, MAX_PAGE_LENGTH);
+                return; // KigPaper
             }
 
             this.pages.add(CraftChatMessage.fromString(page, true)[0]);
diff --git a/src/main/java/org/bukkit/craftbukkit/util/CraftChatMessage.java b/src/main/java/org/bukkit/craftbukkit/util/CraftChatMessage.java
index 38ef8216c..d941fba0d 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/CraftChatMessage.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/CraftChatMessage.java
@@ -22,8 +22,8 @@ public final class CraftChatMessage {
     private static final Pattern LINK_PATTERN = Pattern.compile("((?:(?:https?):\\/\\/)?(?:[-\\w_\\.]{2,}\\.[a-z]{2,4}.*?(?=[\\.\\?!,;:]?(?:[" + String.valueOf(org.bukkit.ChatColor.COLOR_CHAR) + " \\n]|$))))");
     private static class StringMessage {
         private static final Map<Character, EnumChatFormat> formatMap;
-        private static final Pattern INCREMENTAL_PATTERN = Pattern.compile("(" + String.valueOf(org.bukkit.ChatColor.COLOR_CHAR) + "[0-9a-fk-or])|(\\n)|((?:(?:https?):\\/\\/)?(?:[-\\w_\\.]{2,}\\.[a-z]{2,4}.*?(?=[\\.\\?!,;:]?(?:[" + String.valueOf(org.bukkit.ChatColor.COLOR_CHAR) + " \\n]|$))))", Pattern.CASE_INSENSITIVE);
-
+        //private static final Pattern INCREMENTAL_PATTERN = Pattern.compile("(" + String.valueOf(org.bukkit.ChatColor.COLOR_CHAR) + "[0-9a-fk-or])|(\\n)|((?:(?:https?):\\/\\/)?(?:[-\\w_\\.]{2,}\\.[a-z]{2,4}.*?(?=[\\.\\?!,;:]?(?:[" + String.valueOf(org.bukkit.ChatColor.COLOR_CHAR) + " \\n]|$))))", Pattern.CASE_INSENSITIVE);
+        private static final Pattern INCREMENTAL_PATTERN = Pattern.compile("(ยง[0-9a-fk-or])|(\\n)|(https?://[^\\s/$.?#].[^\\sยง]*)", Pattern.CASE_INSENSITIVE); // KigPaper - better regex
         static {
             Builder<Character, EnumChatFormat> builder = ImmutableMap.builder();
             for (EnumChatFormat format : EnumChatFormat.values()) {
-- 
2.28.0

