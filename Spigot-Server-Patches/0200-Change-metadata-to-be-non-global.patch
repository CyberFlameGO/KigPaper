From 5ce5d539b4b8864f1a98a8545bff7cfd326fd1a5 Mon Sep 17 00:00:00 2001
From: RoccoDev <hey@rocco.dev>
Date: Sun, 8 Aug 2021 02:17:23 +0200
Subject: [PATCH] Change metadata to be non-global


diff --git a/src/main/java/dev/rocco/kig/paper/impl/util/SimpleMetadataStore.java b/src/main/java/dev/rocco/kig/paper/impl/util/SimpleMetadataStore.java
new file mode 100644
index 000000000..ff9833dde
--- /dev/null
+++ b/src/main/java/dev/rocco/kig/paper/impl/util/SimpleMetadataStore.java
@@ -0,0 +1,10 @@
+package dev.rocco.kig.paper.impl.util;
+
+import org.bukkit.metadata.MetadataStoreBase;
+
+public class SimpleMetadataStore extends MetadataStoreBase<Object> {
+    @Override
+    protected String disambiguate(Object subject, String metadataKey) {
+        return metadataKey;
+    }
+}
diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index e708b3bf0..7e9342da6 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -7,6 +7,7 @@ import java.util.UUID;
 import java.util.concurrent.Callable;
 
 // CraftBukkit start
+import dev.rocco.kig.paper.impl.util.SimpleMetadataStore;
 import org.bukkit.Bukkit;
 import org.bukkit.Location;
 import org.bukkit.Server;
@@ -149,6 +150,13 @@ public abstract class Entity implements ICommandListener {
      * Used to detect whether the entity was on fire when fire ticks run out
      */
     private boolean wasOnFire;
+
+    private SimpleMetadataStore metadataStore; // KigPaper - store metadata inside entity
+
+    public SimpleMetadataStore getMetadataStore(boolean init) {
+        if (init && metadataStore == null) metadataStore = new SimpleMetadataStore();
+        return metadataStore;
+    }
     // KigPaper end
 
     public int getId() {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
index 45217866b..27f15fded 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
@@ -7,6 +7,7 @@ import java.util.List;
 import java.util.Map;
 import java.util.UUID;
 
+import dev.rocco.kig.paper.impl.util.SimpleMetadataStore;
 import net.minecraft.server.EntityPlayer;
 import net.minecraft.server.NBTTagCompound;
 import net.minecraft.server.WorldNBTStorage;
@@ -27,6 +28,7 @@ public class CraftOfflinePlayer implements OfflinePlayer, ConfigurationSerializa
     private final GameProfile profile;
     private final CraftServer server;
     private final WorldNBTStorage storage;
+    private final SimpleMetadataStore metadataStore = new SimpleMetadataStore(); // KigPaper - store metadata inside entity
 
     protected CraftOfflinePlayer(CraftServer server, GameProfile profile) {
         this.server = server;
@@ -244,18 +246,18 @@ public class CraftOfflinePlayer implements OfflinePlayer, ConfigurationSerializa
     }
 
     public void setMetadata(String metadataKey, MetadataValue metadataValue) {
-        server.getPlayerMetadata().setMetadata(this, metadataKey, metadataValue);
+        metadataStore.setMetadata(this, metadataKey, metadataValue);
     }
 
     public List<MetadataValue> getMetadata(String metadataKey) {
-        return server.getPlayerMetadata().getMetadata(this, metadataKey);
+        return metadataStore.getMetadata(this, metadataKey);
     }
 
     public boolean hasMetadata(String metadataKey) {
-        return server.getPlayerMetadata().hasMetadata(this, metadataKey);
+        return metadataStore.hasMetadata(this, metadataKey);
     }
 
     public void removeMetadata(String metadataKey, Plugin plugin) {
-        server.getPlayerMetadata().removeMetadata(this, metadataKey, plugin);
+        metadataStore.removeMetadata(this, metadataKey, plugin);
     }
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 0b44d1f48..f7a1f322e 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -102,9 +102,11 @@ public final class CraftServer implements Server {
     private YamlConfiguration commandsConfiguration;
     private final Yaml yaml = new Yaml(new SafeConstructor());
     private final Map<UUID, OfflinePlayer> offlinePlayers = new MapMaker().softValues().makeMap();
+    /*
     private final EntityMetadataStore entityMetadata = new EntityMetadataStore();
     private final PlayerMetadataStore playerMetadata = new PlayerMetadataStore();
     private final WorldMetadataStore worldMetadata = new WorldMetadataStore();
+    */ // KigPaper - no longer needed
     private int monsterSpawn = -1;
     private int animalSpawn = -1;
     private int waterAnimalSpawn = -1;
@@ -1473,6 +1475,7 @@ public final class CraftServer implements Server {
         return console.console;
     }
 
+    /*
     public EntityMetadataStore getEntityMetadata() {
         return entityMetadata;
     }
@@ -1483,7 +1486,7 @@ public final class CraftServer implements Server {
 
     public WorldMetadataStore getWorldMetadata() {
         return worldMetadata;
-    }
+    }*/ // KigPaper - no longer needed
 
     @Override
     public File getWorldContainer() {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 557fff824..3b3196a21 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -17,6 +17,7 @@ import java.util.function.Consumer;
 import java.util.stream.Collectors;
 
 import dev.rocco.kig.paper.impl.cheetah.SinkEntityPlayer;
+import dev.rocco.kig.paper.impl.util.SimpleMetadataStore;
 import net.minecraft.server.*;
 
 import org.apache.commons.lang.Validate;
@@ -76,6 +77,7 @@ public class CraftWorld implements World {
     private int ambientSpawn = -1;
     private int chunkLoadCount = 0;
     private int chunkGCTickCount;
+    private final SimpleMetadataStore metadataStore = new SimpleMetadataStore(); // KigPaper - store metadata inside world
 
     private static final Random rand = new Random();
 
@@ -1345,19 +1347,19 @@ public class CraftWorld implements World {
     }
 
     public void setMetadata(String metadataKey, MetadataValue newMetadataValue) {
-        server.getWorldMetadata().setMetadata(this, metadataKey, newMetadataValue);
+        metadataStore.setMetadata(this, metadataKey, newMetadataValue);
     }
 
     public List<MetadataValue> getMetadata(String metadataKey) {
-        return server.getWorldMetadata().getMetadata(this, metadataKey);
+        return metadataStore.getMetadata(this, metadataKey);
     }
 
     public boolean hasMetadata(String metadataKey) {
-        return server.getWorldMetadata().hasMetadata(this, metadataKey);
+        return metadataStore.hasMetadata(this, metadataKey);
     }
 
     public void removeMetadata(String metadataKey, Plugin owningPlugin) {
-        server.getWorldMetadata().removeMetadata(this, metadataKey, owningPlugin);
+        metadataStore.removeMetadata(this, metadataKey, owningPlugin);
     }
 
     public int getMonsterSpawnLimit() {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index dfe9aeced..8ac1609af 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -1,12 +1,10 @@
 package org.bukkit.craftbukkit.entity;
 
 import com.google.common.base.Preconditions;
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.List;
-import java.util.Set;
-import java.util.UUID;
 
+import java.util.*;
+
+import dev.rocco.kig.paper.impl.util.SimpleMetadataStore;
 import net.minecraft.server.*;
 
 import org.bukkit.EntityEffect;
@@ -17,6 +15,7 @@ import org.bukkit.craftbukkit.CraftServer;
 import org.bukkit.craftbukkit.CraftWorld;
 import org.bukkit.event.entity.EntityDamageEvent;
 import org.bukkit.event.player.PlayerTeleportEvent.TeleportCause;
+import org.bukkit.metadata.MetadataStore;
 import org.bukkit.metadata.MetadataValue;
 import org.bukkit.permissions.PermissibleBase;
 import org.bukkit.permissions.Permission;
@@ -416,19 +415,24 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
     }
 
     public void setMetadata(String metadataKey, MetadataValue newMetadataValue) {
-        server.getEntityMetadata().setMetadata(this, metadataKey, newMetadataValue);
+        getHandle().getMetadataStore(true).setMetadata(this, metadataKey, newMetadataValue);
     }
 
     public List<MetadataValue> getMetadata(String metadataKey) {
-        return server.getEntityMetadata().getMetadata(this, metadataKey);
+        SimpleMetadataStore metadataStore = getHandle().getMetadataStore(false);
+        if (metadataStore == null) return Collections.emptyList();
+        return metadataStore.getMetadata(this, metadataKey);
     }
 
     public boolean hasMetadata(String metadataKey) {
-        return server.getEntityMetadata().hasMetadata(this, metadataKey);
+        SimpleMetadataStore metadataStore = getHandle().getMetadataStore(false);
+        return metadataStore != null && metadataStore.hasMetadata(this, metadataKey);
     }
 
     public void removeMetadata(String metadataKey, Plugin owningPlugin) {
-        server.getEntityMetadata().removeMetadata(this, metadataKey, owningPlugin);
+        SimpleMetadataStore metadataStore = getHandle().getMetadataStore(false);
+        if (metadataStore == null) return;
+        metadataStore.removeMetadata(this, metadataKey, owningPlugin);
     }
 
     public boolean isInsideVehicle() {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 45b64e659..26b6e7f24 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -5,48 +5,24 @@ import com.google.common.collect.ImmutableSet;
 import com.mojang.authlib.GameProfile;
 import dev.rocco.kig.paper.api.event.DisconnectReason;
 import io.netty.buffer.Unpooled;
-
-import java.io.ByteArrayOutputStream;
-import java.io.IOException;
-import java.lang.Override;
-import java.net.InetSocketAddress;
-import java.net.SocketAddress;
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.HashSet;
-import java.util.LinkedHashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.UUID;
-import java.util.logging.Level;
-import java.util.logging.Logger;
 import net.md_5.bungee.api.chat.BaseComponent;
-
 import net.minecraft.server.*;
 import net.minecraft.server.PacketPlayOutTitle.EnumTitleAction;
-
-import org.apache.commons.lang.Validate;
 import org.apache.commons.lang.NotImplementedException;
-import org.bukkit.*;
+import org.apache.commons.lang.Validate;
 import org.bukkit.Achievement;
-import org.bukkit.BanList;
-import org.bukkit.Statistic;
 import org.bukkit.Material;
-import org.bukkit.Statistic.Type;
+import org.bukkit.Statistic;
+import org.bukkit.*;
 import org.bukkit.World;
+import org.bukkit.Statistic.Type;
 import org.bukkit.configuration.serialization.DelegateDeserialization;
 import org.bukkit.conversations.Conversation;
 import org.bukkit.conversations.ConversationAbandonedEvent;
 import org.bukkit.conversations.ManuallyAbandonedConversationCanceller;
+import org.bukkit.craftbukkit.*;
 import org.bukkit.craftbukkit.block.CraftSign;
 import org.bukkit.craftbukkit.conversations.ConversationTracker;
-import org.bukkit.craftbukkit.CraftEffect;
-import org.bukkit.craftbukkit.CraftOfflinePlayer;
-import org.bukkit.craftbukkit.CraftServer;
-import org.bukkit.craftbukkit.CraftSound;
-import org.bukkit.craftbukkit.CraftStatistic;
-import org.bukkit.craftbukkit.CraftWorld;
 import org.bukkit.craftbukkit.map.CraftMapView;
 import org.bukkit.craftbukkit.map.RenderData;
 import org.bukkit.craftbukkit.scoreboard.CraftScoreboard;
@@ -61,12 +37,18 @@ import org.bukkit.event.player.PlayerUnregisterChannelEvent;
 import org.bukkit.inventory.InventoryView.Property;
 import org.bukkit.map.MapCursor;
 import org.bukkit.map.MapView;
-import org.bukkit.metadata.MetadataValue;
 import org.bukkit.plugin.Plugin;
 import org.bukkit.plugin.messaging.StandardMessenger;
 import org.bukkit.scoreboard.Scoreboard;
-// PaperSpigot start
 import org.github.paperspigot.Title;
+
+import java.io.ByteArrayOutputStream;
+import java.io.IOException;
+import java.net.InetSocketAddress;
+import java.net.SocketAddress;
+import java.util.*;
+import java.util.logging.Level;
+import java.util.logging.Logger;
 // PaperSpigot end
 
 @DelegateDeserialization(CraftOfflinePlayer.class)
@@ -1269,25 +1251,26 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         return EntityType.PLAYER;
     }
 
+    /*
     @Override
     public void setMetadata(String metadataKey, MetadataValue newMetadataValue) {
-        server.getPlayerMetadata().setMetadata(this, metadataKey, newMetadataValue);
+        metadataStore.setMetadata(this, metadataKey, newMetadataValue);
     }
 
     @Override
     public List<MetadataValue> getMetadata(String metadataKey) {
-        return server.getPlayerMetadata().getMetadata(this, metadataKey);
+        return metadataStore.getMetadata(this, metadataKey);
     }
 
     @Override
     public boolean hasMetadata(String metadataKey) {
-        return server.getPlayerMetadata().hasMetadata(this, metadataKey);
+        return metadataStore.hasMetadata(this, metadataKey);
     }
 
     @Override
     public void removeMetadata(String metadataKey, Plugin owningPlugin) {
-        server.getPlayerMetadata().removeMetadata(this, metadataKey, owningPlugin);
-    }
+        metadataStore.removeMetadata(this, metadataKey, owningPlugin);
+    }*/ // KigPaper - we can use the ones from CraftEntity
 
     @Override
     public boolean setWindowProperty(Property prop, int value) {
-- 
2.31.1

