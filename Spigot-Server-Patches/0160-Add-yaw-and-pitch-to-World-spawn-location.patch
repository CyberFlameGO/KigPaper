From 1bef66ca73fb1ade9a6e823e5db75490ef249cde Mon Sep 17 00:00:00 2001
From: RoccoDev <hey@rocco.dev>
Date: Thu, 18 Mar 2021 20:33:06 +0100
Subject: [PATCH] Add yaw and pitch to World spawn location


diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 12e6f607a..3141f34d0 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -3003,7 +3003,7 @@ public abstract class World implements IBlockAccess {
     }
 
     public void B(BlockPosition blockposition) {
-        this.worldData.setSpawn(blockposition);
+        this.worldData.setSpawn(blockposition, 0, 0); // KigPaper - add yaw/pitch - also, this method seems unused
     }
 
     public boolean a(EntityHuman entityhuman, BlockPosition blockposition) {
diff --git a/src/main/java/net/minecraft/server/WorldData.java b/src/main/java/net/minecraft/server/WorldData.java
index 3a7b22b92..0b97c1175 100644
--- a/src/main/java/net/minecraft/server/WorldData.java
+++ b/src/main/java/net/minecraft/server/WorldData.java
@@ -47,6 +47,15 @@ public class WorldData {
     private int J;
     private GameRules K;
     public WorldServer world; // CraftBukkit
+    // KigPaper start
+    private float spawnYaw, spawnPitch;
+    public float getSpawnYaw() {
+        return spawnYaw;
+    }
+    public float getSpawnPitch() {
+        return spawnPitch;
+    }
+    // KigPaper end
 
     protected WorldData() {
         this.c = WorldType.NORMAL;
@@ -190,6 +199,10 @@ public class WorldData {
             this.J = nbttagcompound.getInt("BorderWarningTime");
         }
 
+        // KigPaper start
+        if (nbttagcompound.hasKey("SpawnYaw")) this.spawnYaw = nbttagcompound.getFloat("SpawnYaw");
+        if (nbttagcompound.hasKey("SpawnPitch")) this.spawnPitch = nbttagcompound.getFloat("SpawnPitch");
+        // KigPaper end
     }
 
     public WorldData(WorldSettings worldsettings, String s) {
@@ -269,6 +282,10 @@ public class WorldData {
         this.H = worlddata.H;
         this.J = worlddata.J;
         this.I = worlddata.I;
+        // KigPaper start
+        this.spawnYaw = worlddata.spawnYaw;
+        this.spawnPitch = worlddata.spawnPitch;
+        // KigPaper end
     }
 
     public NBTTagCompound a() {
@@ -327,6 +344,10 @@ public class WorldData {
         if (nbttagcompound1 != null) {
             nbttagcompound.set("Player", nbttagcompound1);
         }
+        // KigPaper start
+        nbttagcompound.setFloat("SpawnYaw", spawnYaw);
+        nbttagcompound.setFloat("SpawnPitch", spawnPitch);
+        // KigPaper end
 
     }
 
@@ -366,10 +387,14 @@ public class WorldData {
         this.i = i;
     }
 
-    public void setSpawn(BlockPosition blockposition) {
+    public void setSpawn(BlockPosition blockposition, float yaw, float pitch) {
         this.e = blockposition.getX();
         this.f = blockposition.getY();
         this.g = blockposition.getZ();
+        // KigPaper start
+        this.spawnYaw = yaw;
+        this.spawnPitch = pitch;
+        // KigPaper end
     }
 
     public String getName() {
diff --git a/src/main/java/net/minecraft/server/WorldServer.java b/src/main/java/net/minecraft/server/WorldServer.java
index 87529552a..5e71199ff 100644
--- a/src/main/java/net/minecraft/server/WorldServer.java
+++ b/src/main/java/net/minecraft/server/WorldServer.java
@@ -870,9 +870,9 @@ public class WorldServer extends World implements IAsyncTaskHandler {
 
     private void b(WorldSettings worldsettings) {
         if (!this.worldProvider.e()) {
-            this.worldData.setSpawn(BlockPosition.ZERO.up(this.worldProvider.getSeaLevel()));
+            this.worldData.setSpawn(BlockPosition.ZERO.up(this.worldProvider.getSeaLevel()), 0, 0); // KigPaper - add yaw/pitch
         } else if (this.worldData.getType() == WorldType.DEBUG_ALL_BLOCK_STATES) {
-            this.worldData.setSpawn(BlockPosition.ZERO.up());
+            this.worldData.setSpawn(BlockPosition.ZERO.up(), 0, 0); // KigPaper - add yaw/pitch
         } else {
             this.isLoading = true;
             WorldChunkManager worldchunkmanager = this.worldProvider.m();
@@ -892,7 +892,7 @@ public class WorldServer extends World implements IAsyncTaskHandler {
                     if (spawn.getWorld() != ((WorldServer) this).getWorld()) {
                         throw new IllegalStateException("Cannot set spawn point for " + this.worldData.getName() + " to be in another world (" + spawn.getWorld().getName() + ")");
                     } else {
-                        this.worldData.setSpawn(new BlockPosition(spawn.getBlockX(), spawn.getBlockY(), spawn.getBlockZ()));
+                        this.worldData.setSpawn(new BlockPosition(spawn.getBlockX(), spawn.getBlockY(), spawn.getBlockZ()), 0, 0); // KigPaper - add yaw/pitch
                         this.isLoading = false;
                         return;
                     }
@@ -918,7 +918,7 @@ public class WorldServer extends World implements IAsyncTaskHandler {
                 }
             }
 
-            this.worldData.setSpawn(new BlockPosition(i, j, k));
+            this.worldData.setSpawn(new BlockPosition(i, j, k), 0, 0); // KigPaper - add yaw/pitch
             this.isLoading = false;
             if (worldsettings.c()) {
                 this.l();
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index b850e02a5..d6fdbcb6a 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -106,13 +106,13 @@ public class CraftWorld implements World {
 
     public Location getSpawnLocation() {
         BlockPosition spawn = world.getSpawn();
-        return new Location(this, spawn.getX(), spawn.getY(), spawn.getZ());
+        return new Location(this, spawn.getX(), spawn.getY(), spawn.getZ(), world.getWorldData().getSpawnYaw(), world.getWorldData().getSpawnPitch()); // KigPaper - add yaw/pitch
     }
 
-    public boolean setSpawnLocation(int x, int y, int z) {
+    public boolean setSpawnLocation(int x, int y, int z, float yaw, float pitch) { // KigPaper - add yaw/pitch
         try {
             Location previousLocation = getSpawnLocation();
-            world.worldData.setSpawn(new BlockPosition(x, y, z));
+            world.worldData.setSpawn(new BlockPosition(x, y, z), yaw, pitch); // KigPaper - add yaw/pitch
 
             // Notify anyone who's listening.
             SpawnChangeEvent event = new SpawnChangeEvent(this, previousLocation);
diff --git a/src/main/java/org/spigotmc/SpigotConfig.java b/src/main/java/org/spigotmc/SpigotConfig.java
index e2df64a26..e14ee3bc3 100644
--- a/src/main/java/org/spigotmc/SpigotConfig.java
+++ b/src/main/java/org/spigotmc/SpigotConfig.java
@@ -27,6 +27,7 @@ import org.apache.logging.log4j.core.config.Configuration;
 import org.bukkit.Bukkit;
 import org.bukkit.ChatColor;
 import org.bukkit.command.Command;
+import org.bukkit.command.defaults.SetWorldSpawnCommand;
 import org.bukkit.configuration.ConfigurationSection;
 import org.bukkit.configuration.InvalidConfigurationException;
 import org.bukkit.configuration.file.YamlConfiguration;
@@ -431,5 +432,8 @@ public class SpigotConfig
     private static void kigPaperCommand() {
         commands.put("kigpaper", new KigPaperCommand());
     }
+    private static void overwriteSetWorldSpawnCommand() {
+        commands.put("setworldspawn", new SetWorldSpawnCommand());
+    }
     // KigPaper end
 }
-- 
2.28.0

