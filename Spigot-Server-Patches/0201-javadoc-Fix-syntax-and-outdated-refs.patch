From 30f6f4dd4e504d165d88b3df8272ae97d59aad40 Mon Sep 17 00:00:00 2001
From: Archer <archer@beezig.eu>
Date: Tue, 17 Aug 2021 23:31:46 +0200
Subject: [PATCH] javadoc: Fix syntax and outdated refs

This commit fixes some Javadoc problems that prevented compiling the API
docs. Note, however, that there are still loads of outdated references
in this project's Javadoc. This commit is only trying to fix errors that
prevented Javadoc from successfully outputting a compiled API doc, but
the doc comments are still outdated.

diff --git a/src/main/java/org/bukkit/craftbukkit/metadata/WorldMetadataStore.java b/src/main/java/org/bukkit/craftbukkit/metadata/WorldMetadataStore.java
index dd37ed294..1077fabb3 100644
--- a/src/main/java/org/bukkit/craftbukkit/metadata/WorldMetadataStore.java
+++ b/src/main/java/org/bukkit/craftbukkit/metadata/WorldMetadataStore.java
@@ -10,7 +10,7 @@ import org.bukkit.metadata.MetadataStoreBase;
 public class WorldMetadataStore extends MetadataStoreBase<World> implements MetadataStore<World> {
     /**
      * Generates a unique metadata key for a {@link World} object based on the world UID.
-     * @see WorldMetadataStore#disambiguate(Object, String)
+     * @see WorldMetadataStore#disambiguate(World, String)
      * @param world the world
      * @param metadataKey The name identifying the metadata value
      * @return a unique metadata key
diff --git a/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java b/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java
index f036709c4..6234921bf 100644
--- a/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java
+++ b/src/main/java/org/bukkit/craftbukkit/scheduler/CraftScheduler.java
@@ -35,7 +35,7 @@ import org.github.paperspigot.exception.ServerSchedulerException;
  * <li>Changing the period on a task is delicate.
  *     Any future task needs to notify waiting threads.
  *     Async tasks must be synchronized to make sure that any thread that's finishing will remove itself from {@link #runners}.
- *     Another utility method is provided for this, {@link #cancelTask(CraftTask)}</li>
+ *     Another utility method is provided for this, {@link #cancelTask(int)}</li>
  * <li>{@link #runners} provides a moderately up-to-date view of active tasks.
  *     If the linked head to tail set is read, all remaining tasks that were active at the time execution started will be located in runners.</li>
  * <li>Async tasks are responsible for removing themselves from runners</li>
@@ -50,7 +50,7 @@ public class CraftScheduler implements BukkitScheduler {
      */
     private final AtomicInteger ids = new AtomicInteger(1);
     /**
-     * Current head of linked-list. This reference is always stale, {@link CraftTask#next} is the live reference.
+     * Current head of linked-list. This reference is always stale, {@code CraftTask#next} is the live reference.
      */
     private volatile CraftTask head = new CraftTask();
     /**
diff --git a/src/main/java/org/spigotmc/ActivationRange.java b/src/main/java/org/spigotmc/ActivationRange.java
index d3767d2a8..4b5f87d2c 100644
--- a/src/main/java/org/spigotmc/ActivationRange.java
+++ b/src/main/java/org/spigotmc/ActivationRange.java
@@ -67,7 +67,7 @@ public class ActivationRange
      * These entities are excluded from Activation range checks.
      *
      * @param entity
-     * @param world
+     * @param config
      * @return boolean If it should always tick.
      */
     public static boolean initializeEntityActivationState(Entity entity, SpigotWorldConfig config)
-- 
2.32.0

