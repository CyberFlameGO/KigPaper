From 99e94b07da5b11964d89bcf8d427264ad3f496a7 Mon Sep 17 00:00:00 2001
From: RoccoDev <hey@rocco.dev>
Date: Sat, 6 Mar 2021 16:08:47 +0100
Subject: [PATCH] Fix rotation packets being broadcasted


diff --git a/src/main/java/dev/rocco/kig/paper/impl/command/KigPaperCommand.java b/src/main/java/dev/rocco/kig/paper/impl/command/KigPaperCommand.java
index 4ed6e000b..b82b7eb0d 100644
--- a/src/main/java/dev/rocco/kig/paper/impl/command/KigPaperCommand.java
+++ b/src/main/java/dev/rocco/kig/paper/impl/command/KigPaperCommand.java
@@ -1,6 +1,5 @@
 package dev.rocco.kig.paper.impl.command;
 
-import net.minecraft.server.NetworkManager;
 import org.bukkit.command.Command;
 import org.bukkit.command.CommandSender;
 
@@ -12,13 +11,6 @@ public class KigPaperCommand extends Command {
 
     @Override
     public boolean execute(CommandSender sender, String commandLabel, String[] args) {
-        if (!testPermission(sender)) return true;
-        if(args.length > 0) {
-            if("flush".equalsIgnoreCase(args[0])) {
-                NetworkManager.EXPERIMENTAL_FORCE_CONDITIONAL_FLUSH = !NetworkManager.EXPERIMENTAL_FORCE_CONDITIONAL_FLUSH;
-                sender.sendMessage("Experimental force conditional flush: " + NetworkManager.EXPERIMENTAL_FORCE_CONDITIONAL_FLUSH);
-            }
-        }
         return true;
     }
 }
diff --git a/src/main/java/net/minecraft/server/EntityTrackerEntry.java b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
index 1fc2388ea..da9de7371 100644
--- a/src/main/java/net/minecraft/server/EntityTrackerEntry.java
+++ b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
@@ -411,8 +411,13 @@ public class EntityTrackerEntry {
                     }
 
                     // CraftBukkit start - Fix for nonsensical head yaw
-                    this.i = MathHelper.d(this.tracker.getHeadRotation() * 256.0F / 360.0F);
-                    this.broadcast(new PacketPlayOutEntityHeadRotation(this.tracker, (byte) i));
+                    // KigPaper
+                    if (this.tracker instanceof EntityLiving) {
+                        this.i = MathHelper.d(this.tracker.getHeadRotation() * 256.0F / 360.0F);
+                        // CraftBukkit what the fuck were you thinking?
+                        //this.broadcast(new PacketPlayOutEntityHeadRotation(this.tracker, (byte) i)); // KigPaper
+                        entityplayer.playerConnection.sendPacket(new PacketPlayOutEntityHeadRotation(this.tracker, (byte) i));
+                    }
                     // CraftBukkit end
 
                     if (this.tracker instanceof EntityLiving) {
@@ -430,7 +435,6 @@ public class EntityTrackerEntry {
                 this.trackedPlayers.remove(entityplayer);
                 entityplayer.d(this.tracker);
             }
-
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/NetworkManager.java b/src/main/java/net/minecraft/server/NetworkManager.java
index ff6f0d73a..8938f206a 100644
--- a/src/main/java/net/minecraft/server/NetworkManager.java
+++ b/src/main/java/net/minecraft/server/NetworkManager.java
@@ -28,9 +28,9 @@ import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.Marker;
 import org.apache.logging.log4j.MarkerManager;
+import org.github.paperspigot.PaperSpigotConfig;
 
 public class NetworkManager extends SimpleChannelInboundHandler<Packet> {
-    public static boolean EXPERIMENTAL_FORCE_CONDITIONAL_FLUSH = false;
     private static final Logger g = LogManager.getLogger();
     public static final Marker a = MarkerManager.getMarker("NETWORK");
     public static final Marker b = MarkerManager.getMarker("NETWORK_PACKETS", NetworkManager.a);
@@ -168,7 +168,7 @@ public class NetworkManager extends SimpleChannelInboundHandler<Packet> {
     public void handle(Packet packet) {
         if (this.g()) {
             this.m();
-            this.a(packet, (GenericFutureListener[]) null, !EXPERIMENTAL_FORCE_CONDITIONAL_FLUSH || this.canFlush /* KigPaper */);
+            this.a(packet, (GenericFutureListener[]) null, !PaperSpigotConfig.forceConditionalAutoFlush || this.canFlush /* KigPaper */);
         } else {
             this.j.writeLock().lock();
 
diff --git a/src/main/java/org/github/paperspigot/PaperSpigotConfig.java b/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
index ed68c5470..0ed3fa49d 100644
--- a/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
+++ b/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
@@ -224,7 +224,7 @@ public class PaperSpigotConfig
     }
     // KigPaper start
     public static float knockbackHorizontalMultiplier, knockbackVerticalMultiplier, knockbackHorizontalSprinting, knockbackVerticalSprinting, knockbackFriction;
-    public static boolean betterVehicleHitboxes, nettyReadTimeout;
+    public static boolean betterVehicleHitboxes, nettyReadTimeout, forceConditionalAutoFlush;
     private static void knockbackHorizontalMultiplier() {
         knockbackHorizontalMultiplier = (float) getDouble("knockback.horizontal.normal", 1f);
     }
@@ -242,5 +242,8 @@ public class PaperSpigotConfig
     }
     private static void betterVehicleHitboxes() { betterVehicleHitboxes = getBoolean("better-vehicle-hitboxes", true); }
     private static void nettyReadTimeout() { nettyReadTimeout = getBoolean("netty-read-timeout", true); }
+    private static void conditionalAutoFlush() {
+        forceConditionalAutoFlush = getBoolean("net-force-conditional-flush", true);
+    }
     // KigPaper end
 }
-- 
2.28.0

