From e7896f916df158b7b407e1f82c7baff5fd49370e Mon Sep 17 00:00:00 2001
From: RoccoDev <hey@rocco.dev>
Date: Sat, 27 Mar 2021 21:54:26 +0100
Subject: [PATCH] Debloat join/leave messages


diff --git a/src/main/java/net/minecraft/server/LoginListener.java b/src/main/java/net/minecraft/server/LoginListener.java
index 541cec7cf..20500ce11 100644
--- a/src/main/java/net/minecraft/server/LoginListener.java
+++ b/src/main/java/net/minecraft/server/LoginListener.java
@@ -70,7 +70,8 @@ public class LoginListener implements PacketLoginInListener, IUpdatePlayerListBo
 
     public void disconnect(String s) {
         try {
-            LoginListener.c.info("Disconnecting " + this.d() + ": " + s);
+            // KigPaper - debloat
+            //LoginListener.c.info("Disconnecting " + this.d() + ": " + s);
             ChatComponentText chatcomponenttext = new ChatComponentText(s);
 
             this.networkManager.handle(new PacketLoginOutDisconnect(chatcomponenttext));
@@ -148,7 +149,8 @@ public class LoginListener implements PacketLoginInListener, IUpdatePlayerListBo
     }
 
     public void a(IChatBaseComponent ichatbasecomponent) {
-        LoginListener.c.info(this.d() + " lost connection: " + ichatbasecomponent.c());
+        // KigPaper - debloat
+        // LoginListener.c.info(this.d() + " lost connection: " + ichatbasecomponent.c());
     }
 
     public String d() {
@@ -271,7 +273,8 @@ public class LoginListener implements PacketLoginInListener, IUpdatePlayerListBo
                                 }
                             }
                             // CraftBukkit end
-                            LoginListener.c.info("UUID of player " + LoginListener.this.i.getName() + " is " + LoginListener.this.i.getId());
+                            // KigPaper - debloat
+                            //LoginListener.c.info("UUID of player " + LoginListener.this.i.getName() + " is " + LoginListener.this.i.getId());
                             LoginListener.this.g = LoginListener.EnumProtocolState.READY_TO_ACCEPT;
         }
     }
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index d6d1e266c..6c4493592 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -869,7 +869,8 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
             this.processedDisconnect = true;
         }
         // CraftBukkit end
-        PlayerConnection.c.info(this.player.getName() + " lost connection: " + ichatbasecomponent.c()); // CraftBukkit: Don't toString(). // PAIL: Rename
+        //PlayerConnection.c.info(this.player.getName() + " lost connection: " + ichatbasecomponent.c()); // CraftBukkit: Don't toString(). // PAIL: Rename
+        PlayerConnection.c.info("[-] {} ({})", this.player.getName(), ichatbasecomponent.c()); // KigPaper
         // CraftBukkit start - Replace vanilla quit message handling with our own.
         /*
         this.minecraftServer.aH();
@@ -1180,8 +1181,10 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
    private void handleCommand(String s) {
         SpigotTimings.playerCommandTimer.startTiming(); // Spigot
        // CraftBukkit start - whole method
-        if ( org.spigotmc.SpigotConfig.logCommands ) // Spigot
-        this.c.info(this.player.getName() + " issued server command: " + s);
+        if ( org.spigotmc.SpigotConfig.logCommands ) { // Spigot
+            //this.c.info(this.player.getName() + " issued server command: " + s); // KigPaper - debloat
+            c.info("[/] {}: {}", this.player.getName(), s);
+        }
 
         CraftPlayer player = this.getPlayer();
 
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index 5fe7e17d3..a1842c06e 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -201,7 +201,9 @@ public abstract class PlayerList {
         }
 
         // CraftBukkit - Moved from above, added world
-        PlayerList.f.info(entityplayer.getName() + "[" + s1 + "] logged in with entity id " + entityplayer.getId() + " at ([" + entityplayer.world.worldData.getName() + "]" + entityplayer.locX + ", " + entityplayer.locY + ", " + entityplayer.locZ + ")");
+        // KigPaper - debloat
+        //PlayerList.f.info(entityplayer.getName() + "[" + s1 + "] logged in with entity id " + entityplayer.getId() + " at ([" + entityplayer.world.worldData.getName() + "]" + entityplayer.locX + ", " + entityplayer.locY + ", " + entityplayer.locZ + ")");
+        PlayerList.f.info("[+] {} [{}] ({})", entityplayer.getName(), s1, entityplayer.getUniqueID());
     }
 
     public void sendScoreboard(ScoreboardServer scoreboardserver, EntityPlayer entityplayer) {
-- 
2.28.0

