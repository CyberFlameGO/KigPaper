From 52e2036ca669cd1620e1b0f454de6f7ec460925b Mon Sep 17 00:00:00 2001
From: RoccoDev <hey@rocco.dev>
Date: Wed, 12 May 2021 17:54:51 +0200
Subject: [PATCH] Fix player info cloning


diff --git a/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java b/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
index 92219e0b3..890c4fc66 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
@@ -12,7 +12,7 @@ import java.util.Iterator;
 import java.util.List;
 import java.util.UUID;
 
-public class PacketPlayOutPlayerInfo implements Packet<PacketListenerPlayOut>, Cloneable { // KigPaper - make cloneable
+public class PacketPlayOutPlayerInfo implements Packet<PacketListenerPlayOut> {
 
     private EnumPlayerInfoAction a;
     private final List<PlayerInfoData> b = Lists.newArrayList();
@@ -20,6 +20,12 @@ public class PacketPlayOutPlayerInfo implements Packet<PacketListenerPlayOut>, C
     public PacketPlayOutPlayerInfo() {}
 
     // KigPaper start
+    private PacketPlayOutPlayerInfo(PacketPlayOutPlayerInfo copy) {
+        this.a = copy.a;
+        this.b.clear();
+        this.b.addAll(copy.b);
+    }
+
     public PacketPlayOutPlayerInfo(EnumPlayerInfoAction action, EntityPlayer... players) {
         this(null, action, players);
     }
@@ -80,13 +86,15 @@ public class PacketPlayOutPlayerInfo implements Packet<PacketListenerPlayOut>, C
      * @return the packet clone, or this instance if the packet wasn't modified
      */
     public PacketPlayOutPlayerInfo cloneFor(EntityPlayer recipient) {
+        UUID spoofed = recipient.getNickSpoofedUUID();
+        if (spoofed == null) return this;
         PacketPlayOutPlayerInfo clone = null;
         for (int i = 0; i < b.size(); i++) {
             PlayerInfoData infoData = b.get(i);
             // If the UUID has been spoofed and we're sending to the same player, reveal it
-            if (infoData.d.getId().equals(recipient.getNickSpoofedUUID())) {
-                clone = this.clone();
-                infoData = infoData.clone();
+            if (infoData.d.getId().equals(spoofed)) {
+                clone = new PacketPlayOutPlayerInfo(this);
+                infoData = new PlayerInfoData(infoData);
                 PropertyMap properties = infoData.d.getProperties();
                 infoData.d = new GameProfile(recipient.getUniqueID(), infoData.d.getName());
                 infoData.d.getProperties().putAll(properties);
@@ -235,15 +243,6 @@ public class PacketPlayOutPlayerInfo implements Packet<PacketListenerPlayOut>, C
     }
      */
 
-    @Override
-    public PacketPlayOutPlayerInfo clone() {
-        try {
-            return (PacketPlayOutPlayerInfo) super.clone();
-        } catch (CloneNotSupportedException e) {
-            return this;
-        }
-    }
-
     static class SyntheticClass_1 {
 
         static final int[] a = new int[EnumPlayerInfoAction.values().length];
@@ -282,7 +281,7 @@ public class PacketPlayOutPlayerInfo implements Packet<PacketListenerPlayOut>, C
         }
     }
 
-    public static class PlayerInfoData implements Cloneable { // KigPaper - make static and cloneable
+    public static class PlayerInfoData { // KigPaper - make static
 
         private final int b;
         private final WorldSettings.EnumGamemode c;
@@ -296,6 +295,15 @@ public class PacketPlayOutPlayerInfo implements Packet<PacketListenerPlayOut>, C
             this.e = ichatbasecomponent;
         }
 
+        // KigPaper start
+        private PlayerInfoData(PlayerInfoData copy) {
+            this.b = copy.b;
+            this.c = copy.c;
+            this.d = copy.d;
+            this.e = copy.e;
+        }
+        // KigPaper end
+
         public GameProfile a() {
             return this.d;
         }
@@ -315,15 +323,6 @@ public class PacketPlayOutPlayerInfo implements Packet<PacketListenerPlayOut>, C
         public String toString() {
             return Objects.toStringHelper(this).add("latency", this.b).add("gameMode", this.c).add("profile", this.d).add("displayName", this.e == null ? null : IChatBaseComponent.ChatSerializer.a(this.e)).toString();
         }
-
-        @Override
-        public PlayerInfoData clone() {
-            try {
-                return (PlayerInfoData) super.clone();
-            } catch (CloneNotSupportedException cloneNotSupportedException) {
-                return this;
-            }
-        }
     }
 
     public static enum EnumPlayerInfoAction {
-- 
2.28.0

